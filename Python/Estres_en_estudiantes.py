# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IL-uuz4ofYzFx2_3CkYzOQHYSUcnYoob
"""

#Cargar diferentes librerias para análisis de data
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#Cargar dataset
from google.colab import files
uploaded = files.upload()

#Definir df
df = pd.read_csv("StressLevelDataset.csv")
#Mostrar top 5 datos para corroborar data
df.head()

#Resumen Dataset
df.info()
#Cuenta de nulos
df.isnull().sum()

"""No se encuentran nulos"""

#Estadistica de las columnas
df.describe()

#¿Cuál es el nivel promedio de ansiedad?
promedio_ansiedad = df['anxiety_level'].mean()
print(f"Ansiedad promedio: {df['anxiety_level'].mean()}")
#¿Cuántos estudiantes han reportado antecedentes de problemas de salud mental?
problemas_mentales = df[df['mental_health_history'] == 1]
problemas_mentales = len(problemas_mentales)
print(f"Estudiantes con historial de problemas de salud mental: {problemas_mentales}")

#Crear un gráfico de barras para ver que condiciones o factores son los con mayor frecuencia
#Definir columnas
factores_psicologicos = ['anxiety_level', 'self_esteem', 'mental_health_history', 'depression']
factores_fisiologicos = ['headache', 'blood_pressure', 'sleep_quality', 'breathing_problem']
factores_ambientales = ['noise_level', 'living_conditions', 'safety', 'basic_needs']
factores_academicos = ['academic_performance', 'study_load', 'teacher_student_relationship', 'future_career_concerns']
factores_sociales = ['social_support', 'peer_pressure', 'extracurricular_activities', 'bullying']
# Calculate el número de estudiantes por cada factor
num_students_with_negative_psychological = df[factores_psicologicos].apply(lambda x: x.lt(3).sum(), axis=1)
num_students_with_negative_physiological = df[factores_fisiologicos].apply(lambda x: x.gt(3).sum(), axis=1)
num_students_with_negative_environmental = df[factores_ambientales].apply(lambda x: x.gt(3).sum(), axis=1)
num_students_with_negative_academic = df[factores_academicos].apply(lambda x: x.lt(3).sum(), axis=1)
num_students_with_negative_social = df[factores_sociales].apply(lambda x: x.gt(3).sum(), axis=1)

#Crear gráfico de barras por experiancias y condiciones negativas de los estudiantes
factors = ['Psicologico', 'Fisiologico', 'Ambiental', 'Academico', 'Social']
negative_experiences = [
    num_students_with_negative_psychological.sum(),
    num_students_with_negative_physiological.sum(),
    num_students_with_negative_environmental.sum(),
    num_students_with_negative_academic.sum(),
    num_students_with_negative_social.sum()
]
#Definir funciones para lograr codigo de color
df = pd.DataFrame({
    "Factor": factors,
    "Número de estudiantes": negative_experiences})
palette = sns.color_palette("viridis", len(factors))
#Creación de grafico
plt.figure(figsize=(10, 6))
sns.barplot(data=df, x="Factor", y="Número de estudiantes", hue="Factor", palette=palette, legend=False)
plt.title("Número de estudiantes con experiencias o condiciones por factor")
plt.xlabel("Factores")
plt.ylabel("Número de estudiantes")
plt.xticks(rotation=45)
plt.show()

"""En orden, los 3 factores que mayormente afectan:
1) Académico
2) Psicológico
3) Ambiental
"""

#Volver a dataset original para poder realizar gráficos
df_original = pd.read_csv("StressLevelDataset.csv")
print(df_original.head())

#Matriz de correlación y mapa de calor
plt.figure(figsize=(18, 14))  #ancho=18, alto=14
sns.heatmap(
    correlation_matrix,
    annot=True,          # mostrar valores
    cmap="coolwarm",     # paleta de colores
    fmt=".2f",           # 2 decimales
    linewidths=0.5,
    cbar_kws={'shrink': 0.8}  # ajustar barra de color
)
plt.title("Matriz de correlación entre variables", fontsize=20, pad=20)
plt.xticks(rotation=45, ha="right", fontsize=12)
plt.yticks(rotation=0, fontsize=12)
plt.tight_layout()
plt.show()

"""Las 3 variables que aumentan el nivel de estres son: 1) Bullying 2) Nivel de ansiedad 3)Preocupaciones futuras de carrera. En forma contraria, las variables que disminuyen el niven de estres son: 1) Autoestima 2) Calidad de sueño 3) Rendimiento académico"""

average_self_esteem = df['self_esteem'].mean()
students_below_average_self_esteem = df[df['self_esteem'] < average_self_esteem]
num_students_below_average_self_esteem = len(students_below_average_self_esteem)
print("1) Número de estudiantes que estan bajo el promedio:", num_students_below_average_self_esteem)
print(f"2) Porcentaje de estudiantes que estan bajo el promedio: {num_students_below_average_self_esteem/1099*100:.2f}%")